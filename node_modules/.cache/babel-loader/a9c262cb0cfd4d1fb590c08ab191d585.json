{"ast":null,"code":"import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { BaseController, createEventEmitterProxy } from '@toruslabs/base-controllers';\nimport { WalletInitializationError } from '@web3auth/base';\nimport { ethErrors } from 'eth-rpc-errors';\nimport getCreateRandomId from 'json-rpc-random-id';\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nclass BaseProvider extends BaseController {\n  // should be Assigned in setupProvider\n  constructor(_ref) {\n    let {\n      config,\n      state\n    } = _ref;\n    super({\n      config,\n      state\n    });\n\n    _defineProperty(this, \"_providerEngineProxy\", null);\n\n    if (!config.chainConfig) throw WalletInitializationError.invalidProviderConfigError(\"Please provide chainConfig\");\n    if (!config.chainConfig.chainId) throw WalletInitializationError.invalidProviderConfigError(\"Please provide chainId inside chainConfig\");\n    if (!config.chainConfig.rpcTarget) throw WalletInitializationError.invalidProviderConfigError(\"Please provide rpcTarget inside chainConfig\");\n    this.defaultState = {\n      chainId: \"loading\"\n    };\n    this.defaultConfig = {\n      chainConfig: config.chainConfig,\n      networks: {\n        [config.chainConfig.chainId]: config.chainConfig\n      }\n    };\n    super.initialize();\n  }\n\n  get provider() {\n    return this._providerEngineProxy;\n  }\n\n  set provider(_) {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  addChain(chainConfig) {\n    if (!chainConfig.chainId) throw ethErrors.rpc.invalidParams(\"chainId is required\");\n    if (!chainConfig.rpcTarget) throw ethErrors.rpc.invalidParams(\"chainId is required\");\n    this.configure({\n      networks: _objectSpread(_objectSpread({}, this.config.networks), {}, {\n        [chainConfig.chainId]: chainConfig\n      })\n    });\n  }\n\n  getChainConfig(chainId) {\n    var _this$config$networks;\n\n    const chainConfig = (_this$config$networks = this.config.networks) === null || _this$config$networks === void 0 ? void 0 : _this$config$networks[chainId];\n    if (!chainConfig) throw ethErrors.rpc.invalidRequest(\"Chain \".concat(chainId, \" is not supported, please add chainConfig for it\"));\n    return chainConfig;\n  }\n\n  getProviderEngineProxy() {\n    return this._providerEngineProxy;\n  }\n\n  updateProviderEngineProxy(providerEngineProxy) {\n    if (this._providerEngineProxy) {\n      this._providerEngineProxy.setTarget(providerEngineProxy);\n    } else {\n      this._providerEngineProxy = createEventEmitterProxy(providerEngineProxy);\n    }\n  }\n\n}\n\nconst createRandomId = getCreateRandomId();\nexport { BaseProvider, createRandomId };","map":{"version":3,"sources":["../src/baseProvider.ts","../src/utils.ts"],"names":["BaseProvider","BaseController","constructor","state","config","WalletInitializationError","chainId","chainConfig","networks","provider","addChain","ethErrors","getChainConfig","getProviderEngineProxy","updateProviderEngineProxy","createEventEmitterProxy","createRandomId","getCreateRandomId"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAesBA,Y,SACZC,c,CAAAA;AAGR;AAGAC,EAAAA,WAAAA,CAAAA,IAAAA,EAAAA;QAAY;AAAA,MAAA,MAAA;AAAUC,MAAAA;AAAV,QAAA,I;AACV,UAAM;AAAA,MAAA,MAAA;AAAUA,MAAAA;AAAV,KAAN;;kDAH6D,I;;AAI7D,QAAI,CAACC,MAAM,CAAX,WAAA,EAAyB,MAAMC,yBAAyB,CAAzBA,0BAAAA,CAAN,4BAAMA,CAAN;AACzB,QAAI,CAACD,MAAM,CAANA,WAAAA,CAAL,OAAA,EAAiC,MAAMC,yBAAyB,CAAzBA,0BAAAA,CAAN,2CAAMA,CAAN;AACjC,QAAI,CAACD,MAAM,CAANA,WAAAA,CAAL,SAAA,EAAmC,MAAMC,yBAAyB,CAAzBA,0BAAAA,CAAN,6CAAMA,CAAN;AACnC,SAAA,YAAA,GAAoB;AAClBC,MAAAA,OAAO,EAAE;AADS,KAApB;AAGA,SAAA,aAAA,GAAqB;AACnBC,MAAAA,WAAW,EAAEH,MAAM,CADA,WAAA;AAEnBI,MAAAA,QAAQ,EAAE;AAAE,SAACJ,MAAM,CAANA,WAAAA,CAAD,OAAA,GAA8BA,MAAM,CAACG;AAAvC;AAFS,KAArB;AAIA,UAAA,UAAA;AACD;;AAEW,MAARE,QAAQ,GAAA;AACV,WAAO,KAAP,oBAAA;AACD;;AAEW,MAARA,QAAQ,CAAA,CAAA,EAAA;AACV,UAAM,IAAA,KAAA,CAAN,yBAAM,CAAN;AACD;;AAEMC,EAAAA,QAAQ,CAAA,WAAA,EAAA;AACb,QAAI,CAACH,WAAW,CAAhB,OAAA,EAA0B,MAAMI,SAAS,CAATA,GAAAA,CAAAA,aAAAA,CAAN,qBAAMA,CAAN;AAC1B,QAAI,CAACJ,WAAW,CAAhB,SAAA,EAA4B,MAAMI,SAAS,CAATA,GAAAA,CAAAA,aAAAA,CAAN,qBAAMA,CAAN;AAC5B,SAAA,SAAA,CAAe;AACbH,MAAAA,QAAQ,EAAA,aAAA,CAAA,aAAA,CAAA,EAAA,EAAO,KAAA,MAAA,CAAP,QAAA,CAAA,EAAA,EAAA,EAAA;AAA6B,SAACD,WAAW,CAAZ,OAAA,GAAuBA;AAApD,OAAA;AADK,KAAf;AAGD;;AAEMK,EAAAA,cAAc,CAAA,OAAA,EAAA;;;AACnB,UAAML,WAAW,GAAA,CAAA,qBAAA,GAAG,KAAA,MAAA,CAAH,QAAA,MAAA,IAAA,IAAA,qBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAG,qBAAA,CAApB,OAAoB,CAApB;AACA,QAAI,CAAJ,WAAA,EAAkB,MAAMI,SAAS,CAATA,GAAAA,CAAAA,cAAAA,CAAAA,SAAAA,MAAAA,CAAAA,OAAAA,EAAN,kDAAMA,CAAAA,CAAN;AAClB,WAAA,WAAA;AACD;;AAESE,EAAAA,sBAAsB,GAAA;AAC9B,WAAO,KAAP,oBAAA;AACD;;AAESC,EAAAA,yBAAyB,CAAA,mBAAA,EAAA;AACjC,QAAI,KAAJ,oBAAA,EAA+B;AAC5B,WAAA,oBAAA,CAAA,SAAA,CAAA,mBAAA;AADH,KAAA,MAEO;AACL,WAAA,oBAAA,GAA4BC,uBAAuB,CAAnD,mBAAmD,CAAnD;AACD;AACF;;AArDOd;;MCfGe,cAAc,GAAGC,iBAAiB,E","sourcesContent":["import _defineProperty from '@babel/runtime/helpers/defineProperty';\r\nimport { BaseController, createEventEmitterProxy } from '@toruslabs/base-controllers';\r\nimport { WalletInitializationError } from '@web3auth/base';\r\nimport { ethErrors } from 'eth-rpc-errors';\r\nimport getCreateRandomId from 'json-rpc-random-id';\r\n\r\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\r\n\r\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\r\nclass BaseProvider extends BaseController {\r\n  // should be Assigned in setupProvider\r\n  constructor(_ref) {\r\n    let {\r\n      config,\r\n      state\r\n    } = _ref;\r\n    super({\r\n      config,\r\n      state\r\n    });\r\n\r\n    _defineProperty(this, \"_providerEngineProxy\", null);\r\n\r\n    if (!config.chainConfig) throw WalletInitializationError.invalidProviderConfigError(\"Please provide chainConfig\");\r\n    if (!config.chainConfig.chainId) throw WalletInitializationError.invalidProviderConfigError(\"Please provide chainId inside chainConfig\");\r\n    if (!config.chainConfig.rpcTarget) throw WalletInitializationError.invalidProviderConfigError(\"Please provide rpcTarget inside chainConfig\");\r\n    this.defaultState = {\r\n      chainId: \"loading\"\r\n    };\r\n    this.defaultConfig = {\r\n      chainConfig: config.chainConfig,\r\n      networks: {\r\n        [config.chainConfig.chainId]: config.chainConfig\r\n      }\r\n    };\r\n    super.initialize();\r\n  }\r\n\r\n  get provider() {\r\n    return this._providerEngineProxy;\r\n  }\r\n\r\n  set provider(_) {\r\n    throw new Error(\"Method not implemented.\");\r\n  }\r\n\r\n  addChain(chainConfig) {\r\n    if (!chainConfig.chainId) throw ethErrors.rpc.invalidParams(\"chainId is required\");\r\n    if (!chainConfig.rpcTarget) throw ethErrors.rpc.invalidParams(\"chainId is required\");\r\n    this.configure({\r\n      networks: _objectSpread(_objectSpread({}, this.config.networks), {}, {\r\n        [chainConfig.chainId]: chainConfig\r\n      })\r\n    });\r\n  }\r\n\r\n  getChainConfig(chainId) {\r\n    var _this$config$networks;\r\n\r\n    const chainConfig = (_this$config$networks = this.config.networks) === null || _this$config$networks === void 0 ? void 0 : _this$config$networks[chainId];\r\n    if (!chainConfig) throw ethErrors.rpc.invalidRequest(\"Chain \".concat(chainId, \" is not supported, please add chainConfig for it\"));\r\n    return chainConfig;\r\n  }\r\n\r\n  getProviderEngineProxy() {\r\n    return this._providerEngineProxy;\r\n  }\r\n\r\n  updateProviderEngineProxy(providerEngineProxy) {\r\n    if (this._providerEngineProxy) {\r\n      this._providerEngineProxy.setTarget(providerEngineProxy);\r\n    } else {\r\n      this._providerEngineProxy = createEventEmitterProxy(providerEngineProxy);\r\n    }\r\n  }\r\n\r\n}\r\n\r\nconst createRandomId = getCreateRandomId();\r\n\r\nexport { BaseProvider, createRandomId };\r\n//# sourceMappingURL=baseProvider.esm.js.map\r\n"]},"metadata":{},"sourceType":"module"}