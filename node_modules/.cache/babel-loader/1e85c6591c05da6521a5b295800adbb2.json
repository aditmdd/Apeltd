{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { arrayify } from \"@ethersproject/bytes\";\nexport function getUrl(href, options) {\n  return __awaiter(this, void 0, void 0, function* () {\n    if (options == null) {\n      options = {};\n    }\n\n    const request = {\n      method: options.method || \"GET\",\n      headers: options.headers || {},\n      body: options.body || undefined\n    };\n\n    if (options.skipFetchSetup !== true) {\n      request.mode = \"cors\"; // no-cors, cors, *same-origin\n\n      request.cache = \"no-cache\"; // *default, no-cache, reload, force-cache, only-if-cached\n\n      request.credentials = \"same-origin\"; // include, *same-origin, omit\n\n      request.redirect = \"follow\"; // manual, *follow, error\n\n      request.referrer = \"client\"; // no-referrer, *client\n    }\n\n    ;\n    const response = yield fetch(href, request);\n    const body = yield response.arrayBuffer();\n    const headers = {};\n\n    if (response.headers.forEach) {\n      response.headers.forEach((value, key) => {\n        headers[key.toLowerCase()] = value;\n      });\n    } else {\n      response.headers.keys().forEach(key => {\n        headers[key.toLowerCase()] = response.headers.get(key);\n      });\n    }\n\n    return {\n      headers: headers,\n      statusCode: response.status,\n      statusMessage: response.statusText,\n      body: arrayify(new Uint8Array(body))\n    };\n  });\n}","map":{"version":3,"sources":["../src.ts/browser-geturl.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,SAAS,QAAT,QAAyB,sBAAzB;AAMA,OAAM,SAAgB,MAAhB,CAAuB,IAAvB,EAAqC,OAArC,EAAsD;;AACxD,QAAI,OAAO,IAAI,IAAf,EAAqB;AAAE,MAAA,OAAO,GAAG,EAAV;AAAgB;;AAEvC,UAAM,OAAO,GAAgB;AACzB,MAAA,MAAM,EAAG,OAAO,CAAC,MAAR,IAAkB,KADF;AAEzB,MAAA,OAAO,EAAG,OAAO,CAAC,OAAR,IAAmB,EAFJ;AAGzB,MAAA,IAAI,EAAG,OAAO,CAAC,IAAR,IAAgB;AAHE,KAA7B;;AAMA,QAAI,OAAO,CAAC,cAAR,KAA2B,IAA/B,EAAqC;AACjC,MAAA,OAAO,CAAC,IAAR,GAA4B,MAA5B,CADiC,CACgB;;AACjD,MAAA,OAAO,CAAC,KAAR,GAA8B,UAA9B,CAFiC,CAEgB;;AACjD,MAAA,OAAO,CAAC,WAAR,GAA0C,aAA1C,CAHiC,CAGyB;;AAC1D,MAAA,OAAO,CAAC,QAAR,GAAoC,QAApC,CAJiC,CAIgB;;AACjD,MAAA,OAAO,CAAC,QAAR,GAAmB,QAAnB,CALiC,CAKgB;AACpD;;AAAA;AAED,UAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,IAAD,EAAO,OAAP,CAA5B;AACA,UAAM,IAAI,GAAG,MAAM,QAAQ,CAAC,WAAT,EAAnB;AAEA,UAAM,OAAO,GAAiC,EAA9C;;AACA,QAAI,QAAQ,CAAC,OAAT,CAAiB,OAArB,EAA8B;AAC1B,MAAA,QAAQ,CAAC,OAAT,CAAiB,OAAjB,CAAyB,CAAC,KAAD,EAAQ,GAAR,KAAe;AACpC,QAAA,OAAO,CAAC,GAAG,CAAC,WAAJ,EAAD,CAAP,GAA6B,KAA7B;AACH,OAFD;AAGH,KAJD,MAIO;AAC2B,MAAA,QAAQ,CAAC,OAAV,CAAoB,IAA3B,GAAoC,OAApC,CAA6C,GAAD,IAAQ;AACtE,QAAA,OAAO,CAAC,GAAG,CAAC,WAAJ,EAAD,CAAP,GAA6B,QAAQ,CAAC,OAAT,CAAiB,GAAjB,CAAqB,GAArB,CAA7B;AACH,OAFqB;AAGzB;;AAED,WAAO;AACH,MAAA,OAAO,EAAE,OADN;AAEH,MAAA,UAAU,EAAE,QAAQ,CAAC,MAFlB;AAGH,MAAA,aAAa,EAAE,QAAQ,CAAC,UAHrB;AAIH,MAAA,IAAI,EAAE,QAAQ,CAAC,IAAI,UAAJ,CAAe,IAAf,CAAD;AAJX,KAAP;AAMH,G;AAAA","sourceRoot":"","sourcesContent":["\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { arrayify } from \"@ethersproject/bytes\";\r\nexport function getUrl(href, options) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        if (options == null) {\r\n            options = {};\r\n        }\r\n        const request = {\r\n            method: (options.method || \"GET\"),\r\n            headers: (options.headers || {}),\r\n            body: (options.body || undefined),\r\n        };\r\n        if (options.skipFetchSetup !== true) {\r\n            request.mode = \"cors\"; // no-cors, cors, *same-origin\r\n            request.cache = \"no-cache\"; // *default, no-cache, reload, force-cache, only-if-cached\r\n            request.credentials = \"same-origin\"; // include, *same-origin, omit\r\n            request.redirect = \"follow\"; // manual, *follow, error\r\n            request.referrer = \"client\"; // no-referrer, *client\r\n        }\r\n        ;\r\n        const response = yield fetch(href, request);\r\n        const body = yield response.arrayBuffer();\r\n        const headers = {};\r\n        if (response.headers.forEach) {\r\n            response.headers.forEach((value, key) => {\r\n                headers[key.toLowerCase()] = value;\r\n            });\r\n        }\r\n        else {\r\n            ((response.headers).keys)().forEach((key) => {\r\n                headers[key.toLowerCase()] = response.headers.get(key);\r\n            });\r\n        }\r\n        return {\r\n            headers: headers,\r\n            statusCode: response.status,\r\n            statusMessage: response.statusText,\r\n            body: arrayify(new Uint8Array(body)),\r\n        };\r\n    });\r\n}\r\n//# sourceMappingURL=geturl.js.map"]},"metadata":{},"sourceType":"module"}