{"ast":null,"code":"'use strict';\n\nvar $ = require('../internals/export');\n\nvar aCallable = require('../internals/a-callable');\n\nvar getBuiltIn = require('../internals/get-built-in');\n\nvar call = require('../internals/function-call');\n\nvar newPromiseCapabilityModule = require('../internals/new-promise-capability');\n\nvar perform = require('../internals/perform');\n\nvar iterate = require('../internals/iterate');\n\nvar PROMISE_ANY_ERROR = 'No one promise resolved'; // `Promise.any` method\n// https://tc39.es/ecma262/#sec-promise.any\n\n$({\n  target: 'Promise',\n  stat: true\n}, {\n  any: function any(iterable) {\n    var C = this;\n    var AggregateError = getBuiltIn('AggregateError');\n    var capability = newPromiseCapabilityModule.f(C);\n    var resolve = capability.resolve;\n    var reject = capability.reject;\n    var result = perform(function () {\n      var promiseResolve = aCallable(C.resolve);\n      var errors = [];\n      var counter = 0;\n      var remaining = 1;\n      var alreadyResolved = false;\n      iterate(iterable, function (promise) {\n        var index = counter++;\n        var alreadyRejected = false;\n        remaining++;\n        call(promiseResolve, C, promise).then(function (value) {\n          if (alreadyRejected || alreadyResolved) return;\n          alreadyResolved = true;\n          resolve(value);\n        }, function (error) {\n          if (alreadyRejected || alreadyResolved) return;\n          alreadyRejected = true;\n          errors[index] = error;\n          --remaining || reject(new AggregateError(errors, PROMISE_ANY_ERROR));\n        });\n      });\n      --remaining || reject(new AggregateError(errors, PROMISE_ANY_ERROR));\n    });\n    if (result.error) reject(result.value);\n    return capability.promise;\n  }\n});","map":{"version":3,"sources":["C:/xampp/htdocs/Apeltd/node_modules/core-js-pure/modules/es.promise.any.js"],"names":["$","require","aCallable","getBuiltIn","call","newPromiseCapabilityModule","perform","iterate","PROMISE_ANY_ERROR","target","stat","any","iterable","C","AggregateError","capability","f","resolve","reject","result","promiseResolve","errors","counter","remaining","alreadyResolved","promise","index","alreadyRejected","then","value","error"],"mappings":"AAAA;;AACA,IAAIA,CAAC,GAAGC,OAAO,CAAC,qBAAD,CAAf;;AACA,IAAIC,SAAS,GAAGD,OAAO,CAAC,yBAAD,CAAvB;;AACA,IAAIE,UAAU,GAAGF,OAAO,CAAC,2BAAD,CAAxB;;AACA,IAAIG,IAAI,GAAGH,OAAO,CAAC,4BAAD,CAAlB;;AACA,IAAII,0BAA0B,GAAGJ,OAAO,CAAC,qCAAD,CAAxC;;AACA,IAAIK,OAAO,GAAGL,OAAO,CAAC,sBAAD,CAArB;;AACA,IAAIM,OAAO,GAAGN,OAAO,CAAC,sBAAD,CAArB;;AAEA,IAAIO,iBAAiB,GAAG,yBAAxB,C,CAEA;AACA;;AACAR,CAAC,CAAC;AAAES,EAAAA,MAAM,EAAE,SAAV;AAAqBC,EAAAA,IAAI,EAAE;AAA3B,CAAD,EAAoC;AACnCC,EAAAA,GAAG,EAAE,SAASA,GAAT,CAAaC,QAAb,EAAuB;AAC1B,QAAIC,CAAC,GAAG,IAAR;AACA,QAAIC,cAAc,GAAGX,UAAU,CAAC,gBAAD,CAA/B;AACA,QAAIY,UAAU,GAAGV,0BAA0B,CAACW,CAA3B,CAA6BH,CAA7B,CAAjB;AACA,QAAII,OAAO,GAAGF,UAAU,CAACE,OAAzB;AACA,QAAIC,MAAM,GAAGH,UAAU,CAACG,MAAxB;AACA,QAAIC,MAAM,GAAGb,OAAO,CAAC,YAAY;AAC/B,UAAIc,cAAc,GAAGlB,SAAS,CAACW,CAAC,CAACI,OAAH,CAA9B;AACA,UAAII,MAAM,GAAG,EAAb;AACA,UAAIC,OAAO,GAAG,CAAd;AACA,UAAIC,SAAS,GAAG,CAAhB;AACA,UAAIC,eAAe,GAAG,KAAtB;AACAjB,MAAAA,OAAO,CAACK,QAAD,EAAW,UAAUa,OAAV,EAAmB;AACnC,YAAIC,KAAK,GAAGJ,OAAO,EAAnB;AACA,YAAIK,eAAe,GAAG,KAAtB;AACAJ,QAAAA,SAAS;AACTnB,QAAAA,IAAI,CAACgB,cAAD,EAAiBP,CAAjB,EAAoBY,OAApB,CAAJ,CAAiCG,IAAjC,CAAsC,UAAUC,KAAV,EAAiB;AACrD,cAAIF,eAAe,IAAIH,eAAvB,EAAwC;AACxCA,UAAAA,eAAe,GAAG,IAAlB;AACAP,UAAAA,OAAO,CAACY,KAAD,CAAP;AACD,SAJD,EAIG,UAAUC,KAAV,EAAiB;AAClB,cAAIH,eAAe,IAAIH,eAAvB,EAAwC;AACxCG,UAAAA,eAAe,GAAG,IAAlB;AACAN,UAAAA,MAAM,CAACK,KAAD,CAAN,GAAgBI,KAAhB;AACA,YAAEP,SAAF,IAAeL,MAAM,CAAC,IAAIJ,cAAJ,CAAmBO,MAAnB,EAA2Bb,iBAA3B,CAAD,CAArB;AACD,SATD;AAUD,OAdM,CAAP;AAeA,QAAEe,SAAF,IAAeL,MAAM,CAAC,IAAIJ,cAAJ,CAAmBO,MAAnB,EAA2Bb,iBAA3B,CAAD,CAArB;AACD,KAtBmB,CAApB;AAuBA,QAAIW,MAAM,CAACW,KAAX,EAAkBZ,MAAM,CAACC,MAAM,CAACU,KAAR,CAAN;AAClB,WAAOd,UAAU,CAACU,OAAlB;AACD;AAhCkC,CAApC,CAAD","sourcesContent":["'use strict';\r\nvar $ = require('../internals/export');\r\nvar aCallable = require('../internals/a-callable');\r\nvar getBuiltIn = require('../internals/get-built-in');\r\nvar call = require('../internals/function-call');\r\nvar newPromiseCapabilityModule = require('../internals/new-promise-capability');\r\nvar perform = require('../internals/perform');\r\nvar iterate = require('../internals/iterate');\r\n\r\nvar PROMISE_ANY_ERROR = 'No one promise resolved';\r\n\r\n// `Promise.any` method\r\n// https://tc39.es/ecma262/#sec-promise.any\r\n$({ target: 'Promise', stat: true }, {\r\n  any: function any(iterable) {\r\n    var C = this;\r\n    var AggregateError = getBuiltIn('AggregateError');\r\n    var capability = newPromiseCapabilityModule.f(C);\r\n    var resolve = capability.resolve;\r\n    var reject = capability.reject;\r\n    var result = perform(function () {\r\n      var promiseResolve = aCallable(C.resolve);\r\n      var errors = [];\r\n      var counter = 0;\r\n      var remaining = 1;\r\n      var alreadyResolved = false;\r\n      iterate(iterable, function (promise) {\r\n        var index = counter++;\r\n        var alreadyRejected = false;\r\n        remaining++;\r\n        call(promiseResolve, C, promise).then(function (value) {\r\n          if (alreadyRejected || alreadyResolved) return;\r\n          alreadyResolved = true;\r\n          resolve(value);\r\n        }, function (error) {\r\n          if (alreadyRejected || alreadyResolved) return;\r\n          alreadyRejected = true;\r\n          errors[index] = error;\r\n          --remaining || reject(new AggregateError(errors, PROMISE_ANY_ERROR));\r\n        });\r\n      });\r\n      --remaining || reject(new AggregateError(errors, PROMISE_ANY_ERROR));\r\n    });\r\n    if (result.error) reject(result.value);\r\n    return capability.promise;\r\n  }\r\n});\r\n"]},"metadata":{},"sourceType":"script"}